{"version":3,"sources":["src/index.js"],"names":["Cow","mapObject","type","xPos","yPos","minRandomEnergy","maxRandomEnergy","enoughEnergyToBorn","lessEnoughAfterToBorn","energy","Math","floor","random","energyKoef","koefPossibilityEnter","maxPossibleEnergy","possibleObjectsToMove","BLOCKED_OBJECT","objectClass","moveStepEnergy","Grass","addEnergyEveryStep","Stone","Empty","map","CURRENT_LOOP_INDEX","RANDOM_GRASS_APPEARANCE","INTERVAL_TIME","MAP_POSSIBLE_WIDTH","screen","width","MAP_WIDTH","MAP_HEIGHT","MIN_POSSIBLE_TIME_INTERVAL","COORDS_LIST","start","newInterval","mapEl","$","hasClass","undefined","timeInerval","setInterval","proxy","lookEveryCell","addClass","stop","clearInterval","removeClass","setNewTimeInterval","prompt","val","setTimeout","setObjectToMap","i","j","moveObject","createMap","show","mapHTML","empty","mapList","energy–°oef","energySize","append","allEmptyCellsArr","findFromAllEmptyCells","alert","mapCellClick","cell","deleteNav","prepend","html","addCellListeners","each","remove","on","closeCellNav","deleteObject","addCowByCell","addGrassByCell","addStoneByCell","closest","clickedPositionList","data","split","parseFloat","allEmptyCells","push","length","randomObjValues","getRandomEmptyPlace","newObj","emptyCellsList","findEmptyCells","randomEmptyCell","randomUseKoef","list","koefSum","etalon","procent","randomNumber","procentSum","indexOf","filterGrassList","filter","filterGrass","coords","addListeners","addCow","addGrass","addStone","mapStart","mapStop","parseInt","jQuery"],"mappings":"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","file":"src.0cdf95ad.js","sourceRoot":"..","sourcesContent":["var Cow = function (mapObject) {\n    this.type = 'cow';\n    this.xPos = mapObject.xPos;\n    this.yPos = mapObject.yPos;\n    this.minRandomEnergy = 100;\n    this.maxRandomEnergy = 200;\n    this.enoughEnergyToBorn = 650;\n    this.lessEnoughAfterToBorn = 300;\n    this.energy = mapObject.energy ||  Math.floor(Math.random() * (this.maxRandomEnergy - this.minRandomEnergy + 1) + this.minRandomEnergy);\n    this.energyKoef = 700;\n    this.koefPossibilityEnter = 1;\n    this.maxPossibleEnergy = 700;\n    this.possibleObjectsToMove = ['empty', 'grass'];\n    this.BLOCKED_OBJECT = false;\n    this.objectClass = 'cow';\n    this.moveStepEnergy = 5;\n};\n\nvar Grass = function (mapObject) {\n    this.type = 'grass';\n    this.xPos = mapObject.xPos;\n    this.yPos = mapObject.yPos;\n    this.minRandomEnergy = 10;\n    this.maxRandomEnergy = 20;\n    this.enoughEnergyToBorn = 45;\n    this.lessEnoughAfterToBorn = 25;\n    this.energy = mapObject.energy ||  Math.floor(Math.random() * (this.maxRandomEnergy - this.minRandomEnergy + 1) + this.minRandomEnergy);\n    this.energyKoef = 50;\n    this.koefPossibilityEnter = 1;\n    this.maxPossibleEnergy = 50;\n    this.possibleObjectsToMove = ['empty'];\n    this.BLOCKED_OBJECT = false;\n    this.objectClass = 'grass';\n    this.addEnergyEveryStep = 1;\n};\n\nvar Stone = function () {\n    this.type = 'stone';\n    this.objectClass = 'stone';\n    this.koefPossibilityEnter = 1;\n};\n\nvar Empty = function () {\n    this.type = 'empty';\n    this.objectClass = 'empty';\n    this.koefPossibilityEnter = 1;\n};\n\n\n//–ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã\nvar map = {\n    CURRENT_LOOP_INDEX: 0,\n    RANDOM_GRASS_APPEARANCE: 5,\n    INTERVAL_TIME: 300,\n    MAP_POSSIBLE_WIDTH: Math.floor(screen.width / 50) - 1,\n    MAP_WIDTH: 999,\n    MAP_HEIGHT: 10,\n    MIN_POSSIBLE_TIME_INTERVAL: 500,\n    COORDS_LIST: [],\n    start: function (newInterval) {\n        var mapEl = $('.map');\n        if (!mapEl.hasClass('move')) {\n            var self = this;\n            if (newInterval === undefined) {\n                newInterval = this.timeInerval;\n            }\n            this.timeInerval = setInterval($.proxy(self.lookEveryCell, self), newInterval);\n            mapEl.addClass('move');\n        }\n    },\n    stop: function () {\n        clearInterval(this.timeInerval);\n        $('.map').removeClass('move');\n    },\n    setNewTimeInterval: function () {\n        this.stop();\n        this.INTERVAL_TIME = prompt('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Å–∫–æ—Ä–æ—Å—Ç—å (–º–∏–ª–∏—Å–µ–∫—É–Ω–¥—ã)');\n        if (this.INTERVAL_TIME < this.MIN_POSSIBLE_TIME_INTERVAL) {\n            this.INTERVAL_TIME = this.MIN_POSSIBLE_TIME_INTERVAL;\n        }\n        $('._mapSpeedInput').val(this.INTERVAL_TIME);\n        $.proxy(setTimeout(this.start(this.INTERVAL_TIME), 1000), this);\n    },\n    lookEveryCell: function () {\n        this.CURRENT_LOOP_INDEX++;\n        if (this.CURRENT_LOOP_INDEX % this.RANDOM_GRASS_APPEARANCE === 0) {\n            this.setObjectToMap({type: 'grass'});\n        }\n        for (var i = 0; i < this.MAP_HEIGHT; i++) {\n            for (var j = 0; j < this.MAP_WIDTH; j++) {\n                if (this.COORDS_LIST[i][j].type === 'cow' || this.COORDS_LIST[i][j].type === 'grass') {\n                    if (this.COORDS_LIST[i][j].BLOCKED_OBJECT !== this.CURRENT_LOOP_INDEX){\n                        if (this.COORDS_LIST[i][j].energy <= 0) {\n                            this.COORDS_LIST[i][j] = new Empty();\n                        } else {\n                            this.moveObject(this.COORDS_LIST[i][j]);\n                        }\n                    }\n                } else if (this.COORDS_LIST[i][j].type === 'empty'){\n                  this.COORDS_LIST[i][j].koefPossibilityEnter++ ;\n                }\n            }\n        }\n    },\n    createMap: function () {\n        //–ø—Ä–æ–≤–µ—Ä–∫–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –≤–æ–∑–º–æ–∂–Ω–æ–π —à–∏—Ä–∏–Ω—ã –∫–∞—Ä—Ç—ã\n        this.MAP_WIDTH = this.MAP_WIDTH > this.MAP_POSSIBLE_WIDTH ? this.MAP_POSSIBLE_WIDTH :this.MAP_WIDTH ;\n\n        for (var i = 0; i < this.MAP_HEIGHT; i++) {\n            this.COORDS_LIST[i] = [];\n            for (var j = 0; j < this.MAP_WIDTH; j++) {\n                if (i === 0 || j === 0 || i === this.MAP_HEIGHT - 1 || j === this.MAP_WIDTH - 1) {\n                    this.COORDS_LIST[i][j] = new Stone();\n                } else {\n                    this.COORDS_LIST[i][j] = new Empty();\n                }\n            }\n        }\n        this.show();\n    },\n    show: function () {\n        var mapHTML = $('.map');\n        mapHTML.empty();\n        var mapList = '';\n        for (var i = 0; i < this.MAP_HEIGHT; i++) {\n            for (var j = 0; j < this.MAP_WIDTH; j++) {\n                var energy = this.COORDS_LIST[i][j].energy;\n                var energy–°oef = this.COORDS_LIST[i][j].energyKoef;\n                var energySize = '';\n                if (energy–°oef === undefined) {\n                    energySize = 'no-energy';\n                } else if (energy < energy–°oef/5) {\n                    energySize = 'e1';\n                } else if (energy < 2*energy–°oef/5) {\n                    energySize = 'e2';\n                } else if (energy < 3*energy–°oef/5) {\n                    energySize = 'e3';\n                } else if (energy < 4*energy–°oef/5) {\n                    energySize = 'e4';\n                } else {\n                    energySize = 'e5';\n                }\n                mapList = mapList + '<li class=\"map-frame ' + this.COORDS_LIST[i][j].objectClass + '\" data-pos=\"' + [i, j] + '\"><span class=\"energy ' + energySize + '\"></span></li>'\n            }\n            mapList = mapList + '<br />'\n        }\n        mapHTML.append(mapList);\n    },\n    setObjectToMap: function (mapObject) {\n        if (!mapObject.xPos || !mapObject.yPos) {\n            var allEmptyCellsArr = this.findFromAllEmptyCells();\n            if (!allEmptyCellsArr) {\n                map.stop();\n                return alert('–ú–µ—Å—Ç–∞ –Ω–µ—Ç!');\n            }\n            mapObject.xPos = allEmptyCellsArr[0];\n            mapObject.yPos = allEmptyCellsArr[1];\n        }\n\n        if (mapObject.type === 'cow') {\n            this.COORDS_LIST[mapObject.xPos][mapObject.yPos] = new Cow(mapObject);\n        } else if (mapObject.type === 'grass') {\n            this.COORDS_LIST[mapObject.xPos][mapObject.yPos] = new Grass(mapObject);\n        } else if (mapObject.type === 'stone') {\n            this.COORDS_LIST[mapObject.xPos][mapObject.yPos] = new Stone();\n        }\n\n        this.show();\n    },\n    mapCellClick: function (cell) {\n        map.stop();\n        map.deleteNav();\n        $(cell).prepend($('.cell-nav-holder').html());\n        $.proxy(map.addCellListeners(), map);\n    },\n    deleteNav: function () {\n        $('.map .cell-nav').each(function () {\n          $(this).remove();\n        });\n    },\n    addCellListeners: function () {\n        $('._cell-nav-cancel').on('click', this.closeCellNav);\n        $('._cell-nav-delete').on('click', this.deleteObject);\n        $('._cell-nav-add-cow').on('click', this.addCowByCell);\n        $('._cell-nav-add-grass').on('click', this.addGrassByCell);\n        $('._cell-nav-add-stone').on('click', this.addStoneByCell);\n    },\n    closeCellNav: function () {\n        $(this).closest('.cell-nav').remove();\n    },\n    deleteObject: function () {\n        var clickedPositionList = $(this).closest('.map-frame').data('pos').split(',');\n        if (clickedPositionList[0] == 0 || clickedPositionList[1] == 0 || clickedPositionList[0] == this.MAP_HEIGHT - 1 || clickedPositionList[1] == this.MAP_WIDTH - 1){\n            alert('–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å —Å—Ç–µ–Ω—É!');\n        } else {\n            map.COORDS_LIST[clickedPositionList[0]][clickedPositionList[1]] = new Empty();\n            map.show();\n        }\n    },\n    addCowByCell: function () {\n        var clickedPositionList = $(this).closest('.map-frame').data('pos').split(',');\n        map.COORDS_LIST[clickedPositionList[0]][clickedPositionList[1]] = new Cow({type: 'cow', xPos: parseFloat(clickedPositionList[0]), yPos: parseFloat(clickedPositionList[1])});\n        map.show();\n    },\n    addGrassByCell: function () {\n        var clickedPositionList = $(this).closest('.map-frame').data('pos').split(',');\n        map.COORDS_LIST[clickedPositionList[0]][clickedPositionList[1]] = new Grass({type: 'grass', xPos: parseFloat(clickedPositionList[0]), yPos: parseFloat(clickedPositionList[1])});\n        map.show();\n    },\n    addStoneByCell: function () {\n        var clickedPositionList = $(this).closest('.map-frame').data('pos').split(',');\n        map.COORDS_LIST[clickedPositionList[0]][clickedPositionList[1]] = new Stone();\n        map.show();\n    },\n    findFromAllEmptyCells: function () {\n        var allEmptyCells = [];\n        for (var i = 0; i < this.MAP_HEIGHT; i++) {\n            for (var j = 0; j < this.MAP_WIDTH; j++) {\n                if (this.COORDS_LIST[i][j].type === 'empty') {\n                    allEmptyCells.push([i,j]);\n                }\n            }\n        }\n        if (!allEmptyCells.length) {\n            return false;\n        } else {\n            return allEmptyCells[Math.floor(Math.random() * allEmptyCells.length)];\n        }\n    },\n    moveObject: function (mapObject) {\n        var randomObjValues = this.getRandomEmptyPlace(mapObject);\n        var newObj = {};\n        newObj.xPos = randomObjValues.xPos;\n        newObj.yPos = randomObjValues.yPos;\n        newObj.energy = randomObjValues.energy;\n\n        if (this.COORDS_LIST[newObj.xPos][newObj.yPos].type === 'grass' && this.COORDS_LIST[mapObject.xPos][mapObject.yPos].type === 'cow') {\n            mapObject.energy = mapObject.energy + this.COORDS_LIST[newObj.xPos][newObj.yPos].energy;\n        }\n\n        if (mapObject.enoughEnergyToBorn && mapObject.energy >= mapObject.enoughEnergyToBorn) {\n            mapObject.energy = mapObject.energy - mapObject.lessEnoughAfterToBorn;\n            mapObject.BLOCKED_OBJECT = this.CURRENT_LOOP_INDEX;\n            this.setObjectToMap({type : mapObject.type, xPos: newObj.xPos, yPos: newObj.yPos})\n        } else if (mapObject.type === 'cow') {\n            this.COORDS_LIST[mapObject.xPos][mapObject.yPos].koefPossibilityEnter = 1;\n            this.COORDS_LIST[mapObject.xPos][mapObject.yPos] = new Empty();\n\n            mapObject.xPos = newObj.xPos;\n            mapObject.yPos = newObj.yPos;\n            this.COORDS_LIST[mapObject.xPos][mapObject.yPos] = mapObject;\n            mapObject.BLOCKED_OBJECT = this.CURRENT_LOOP_INDEX;\n        }\n\n        if (mapObject.moveStepEnergy !== undefined) {\n            mapObject.energy = mapObject.energy - mapObject.moveStepEnergy;\n        }\n\n        if (mapObject.addEnergyEveryStep !== undefined) {\n            if (mapObject.energy < mapObject.maxPossibleEnergy) {\n                mapObject.energy = mapObject.energy + mapObject.addEnergyEveryStep;\n            }\n        }\n\n        this.show();\n    },\n    getRandomEmptyPlace: function (mapObject) {\n        var emptyCellsList = this.findEmptyCells(mapObject);\n        if (!emptyCellsList) {\n            return {xPos: mapObject.xPos, yPos: mapObject.yPos, energy: mapObject.energy - mapObject.moveStepEnergy}\n        }\n        var randomEmptyCell = this.randomUseKoef(emptyCellsList);\n        var energy = Math.floor(Math.random() * (mapObject.maxRandomEnergy - mapObject.minRandomEnergy + 1) + mapObject.minRandomEnergy);\n        return {xPos: randomEmptyCell.xPos, yPos: randomEmptyCell.yPos, energy: energy};\n    },\n\n    randomUseKoef: function (list) {\n        var koefSum = 0;\n        for (var i=0; i<list.length; i++) {\n            koefSum += list[i].koefPossibilityEnter;\n        }\n\n        var etalon = 100 / koefSum;\n        for (var i=0; i<list.length; i++) {\n            list[i].procent = list[i].koefPossibilityEnter * etalon;\n        }\n\n        var randomNumber = Math.floor( Math.random() * 100 );\n        var procentSum = 0;\n        for (var i=0; i<list.length; i++) {\n            if (randomNumber >= procentSum && randomNumber < procentSum + list[i].procent) {\n                return list[i];\n            } else {\n                procentSum += list[i].procent;\n            }\n        }\n    },\n\n    findEmptyCells: function (mapObject) {\n        var emptyCellsList = [];\n        if (mapObject.possibleObjectsToMove.indexOf(this.COORDS_LIST[mapObject.xPos - 1][mapObject.yPos - 1].type) > -1 ) {\n            emptyCellsList.push(\n                {\n                    xPos: mapObject.xPos - 1,\n                    yPos: mapObject.yPos - 1,\n                    koefPossibilityEnter: map.COORDS_LIST[mapObject.xPos - 1][mapObject.yPos - 1].koefPossibilityEnter\n                }\n            );\n        }\n        if (mapObject.possibleObjectsToMove.indexOf(this.COORDS_LIST[mapObject.xPos - 1][mapObject.yPos].type) > -1 ) {\n            emptyCellsList.push(\n                {\n                    xPos: mapObject.xPos - 1,\n                    yPos: mapObject.yPos,\n                    koefPossibilityEnter: map.COORDS_LIST[mapObject.xPos - 1][mapObject.yPos].koefPossibilityEnter\n                }\n            );\n        }\n        if (mapObject.possibleObjectsToMove.indexOf(this.COORDS_LIST[mapObject.xPos - 1][mapObject.yPos + 1].type) > -1 ) {\n            emptyCellsList.push(\n                {\n                    xPos: mapObject.xPos - 1,\n                    yPos: mapObject.yPos + 1,\n                    koefPossibilityEnter: map.COORDS_LIST[mapObject.xPos - 1][mapObject.yPos + 1].koefPossibilityEnter\n                }\n            );\n        }\n        if (mapObject.possibleObjectsToMove.indexOf(this.COORDS_LIST[mapObject.xPos][mapObject.yPos - 1].type) > -1 ) {\n            emptyCellsList.push(\n                {\n                    xPos: mapObject.xPos,\n                    yPos: mapObject.yPos - 1,\n                    koefPossibilityEnter: map.COORDS_LIST[mapObject.xPos][mapObject.yPos - 1].koefPossibilityEnter\n                }\n            );\n        }\n        if (mapObject.possibleObjectsToMove.indexOf(this.COORDS_LIST[mapObject.xPos][mapObject.yPos + 1].type) > -1 ) {\n            emptyCellsList.push(\n                {\n                    xPos: mapObject.xPos,\n                    yPos: mapObject.yPos + 1,\n                    koefPossibilityEnter: map.COORDS_LIST[mapObject.xPos][mapObject.yPos + 1].koefPossibilityEnter\n                }\n            );\n        }\n        if (mapObject.possibleObjectsToMove.indexOf(this.COORDS_LIST[mapObject.xPos + 1][mapObject.yPos - 1].type) > -1 ) {\n            emptyCellsList.push(\n                {\n                    xPos: mapObject.xPos + 1,\n                    yPos: mapObject.yPos - 1,\n                    koefPossibilityEnter: map.COORDS_LIST[mapObject.xPos + 1][mapObject.yPos - 1].koefPossibilityEnter\n                }\n            );\n        }\n        if (mapObject.possibleObjectsToMove.indexOf(this.COORDS_LIST[mapObject.xPos + 1][mapObject.yPos].type) > -1 ) {\n            emptyCellsList.push(\n                {\n                    xPos: mapObject.xPos + 1,\n                    yPos: mapObject.yPos,\n                    koefPossibilityEnter: map.COORDS_LIST[mapObject.xPos + 1][mapObject.yPos].koefPossibilityEnter\n                }\n            );\n        }\n        if (mapObject.possibleObjectsToMove.indexOf(this.COORDS_LIST[mapObject.xPos + 1][mapObject.yPos + 1].type) > -1 ) {\n            emptyCellsList.push(\n                {\n                    xPos: mapObject.xPos + 1,\n                    yPos: mapObject.yPos + 1,\n                    koefPossibilityEnter: map.COORDS_LIST[mapObject.xPos + 1][mapObject.yPos + 1].koefPossibilityEnter\n                }\n            );\n        }\n\n        //—É–º–Ω–∞—è –∫–æ—Ä–æ–≤–∞\n        var filterGrassList = emptyCellsList.filter(this.filterGrass);\n        if (mapObject.type === 'cow' && filterGrassList.length !== 0) {\n            return filterGrassList;\n        }\n        //\n\n        if (emptyCellsList.length) {\n            return emptyCellsList;\n        } else {\n            return false;\n        }\n    },\n    filterGrass: function (coords) {\n        return map.COORDS_LIST[coords.xPos][coords.yPos].type === 'grass';\n    }\n};\n\nvar addListeners = function () {\n    $('._addCow').on('click', addCow);\n    $('._addGrass').on('click', addGrass);\n    $('._addStone').on('click', addStone);\n    $('._mapStart').on('click', mapStart);\n    $('._mapStop').on('click', mapStop);\n    $('._mapSpeedBtn').on('click', setNewTimeInterval);\n    $('.map').on('click', '.map-frame', mapCellClick);\n};\n\nvar addCow = function () {\n    $.proxy(map.setObjectToMap({type: 'cow'}), map);\n};\n\nvar addGrass = function () {\n    $.proxy(map.setObjectToMap({type: 'grass'}), map);\n};\n\nvar addStone = function () {\n    $.proxy(map.setObjectToMap({type: 'stone'}), map);\n};\n\nvar mapCellClick = function () {\n    $.proxy(map.mapCellClick(this), map);\n};\n\nvar mapStart = function () {\n    $.proxy(map.start(parseInt($('._mapSpeedInput').val()), map));\n};\n\nvar mapStop = function () {\n    $.proxy(map.stop(), map);\n};\n\nvar setNewTimeInterval = function () {\n    $.proxy(map.setNewTimeInterval(), map);\n};\n\njQuery(function () {\n    map.createMap();\n    addListeners();\n});"]}